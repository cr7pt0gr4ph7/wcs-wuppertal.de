---
interface Props {
  href?: string;
  images: {
    src?: string;
    image?: ImageMetadata;
    title?: string;
    href?: string;
  }[];
}

const { href: default_href, images } = Astro.props;
---

<div class="images">
  {
    images?.map(({ title, src, image, href }) => {
      if (href || default_href) {
        return (
          <a class="image" href={href ?? default_href}>
            <img src={src ?? image?.src} title={title} />
          </a>
        );
      } else {
        return (
          <div class="image">
            <img src={src ?? image?.src} title={title} />
          </div>
        );
      }
    })
  }
</div>

<style>
  .images {
    display: flex;
    gap: 3rem;
    max-width: 100%;
    margin-top: 8rem;
  }

  .image {
    display: block;
    box-shadow: var(--image-shadow);
    position: relative;
  }

  .image img {
    display: block;
    max-width: 100%;
  }

  a.image:hover {
    --border-width: 1px;
    --border-offset: 0.45rem;
    --border-color: var(--image-highlight-border);
  }

  a.image::before {
    content: "";
    display: block;
    position: absolute;
    top: calc(-1 * var(--border-offset));
    bottom: calc(-1 * var(--border-offset));
    left: calc(-1 * var(--border-offset));
    right: calc(-1 * var(--border-offset));
    border: var(--border-width) solid var(--border-color);
  }
</style>

---
import { Icon } from "astro-icon/components";
import { getCollection, type InferEntrySchema } from "astro:content";

type ItemType = keyof InferEntrySchema<"calendar">["type"];

interface Props {
  types?: ItemType[];
}

const { types } = Astro.props;

const entries = await getCollection("calendar", ({ data: { type } }) => {
  return (
    !types ||
    types.some(
      (t) =>
        // @ts-ignore
        !!type[t],
    )
  );
});
---

<div class="table">
  <div class="thead"></div>
  <div class="tbody">
    {
      entries
        .toSorted((a, b) =>
          a.data.date == b.data.date ? 0 : a.data.date < b.data.date ? -1 : 1,
        )
        .map((entry) => {
          if (entry.data.children) {
            return (
              <div class="tr-parent">
                <details>
                  <summary class="tr primary">
                    <div class="td name">
                      {entry.data.subtitle ? (
                        <>
                          <div class="title">{entry.data.title}</div>
                          <div class="subtitle">{entry.data.subtitle}</div>
                        </>
                      ) : (
                        entry.data.title
                      )}
                    </div>
                    <div class="td dates">
                      {entry.data.date.toLocaleDateString("de-DE")}{" "}
                      <span class="additional-dates">
                        {"+ "}
                        <span>
                          {entry.data.children.length - 1}
                          <span class="if-large-viewport">
                            {" weitere Starttermine"}
                          </span>
                        </span>
                      </span>
                    </div>
                    <div class="td location">{entry.data.location}</div>
                    <div class="td link">
                      {entry.data.url ? (
                        <a href={entry.data.url}>
                          {entry.data.type.requires_registration
                            ? "Anmelden"
                            : "Mehr Infos"}
                        </a>
                      ) : null}
                    </div>
                  </summary>
                </details>
                <div class="expander">
                  <div class="sub-table">
                    {entry.data.children
                      .toSorted((a, b) =>
                        a.date == b.date ? 0 : a.date < b.date ? -1 : 1,
                      )
                      .map((child) => {
                        return (
                          <div class="tr">
                            <div class="td name">
                              {child.subtitle ? (
                                <>
                                  <div class="title">{child.title}</div>
                                  <div class="subtitle">{child.subtitle}</div>
                                </>
                              ) : (
                                child.title
                              )}
                            </div>
                            <div class="td dates">
                              {child.date.toLocaleString("de-DE")}
                            </div>
                            <div class="td location">{child.location}</div>
                            <div class="td link">
                              {child.url ? (
                                <a href={child.url}>
                                  {child.type.requires_registration
                                    ? "Anmelden"
                                    : "Mehr Infos"}
                                </a>
                              ) : null}
                            </div>
                          </div>
                        );
                      })}
                  </div>
                </div>
              </div>
            );
          } else {
            return (
              <div class="tr primary">
                <div class="td name">
                  {" "}
                  {entry.data.subtitle ? (
                    <>
                      <div class="title">{entry.data.title}</div>
                      <div class="subtitle">{entry.data.subtitle}</div>
                    </>
                  ) : (
                    entry.data.title
                  )}
                </div>
                <div class="td dates">
                  {entry.data.date.toLocaleString("de-DE")}
                </div>
                <div class="td location">{entry.data.location}</div>
                <div class="td link">
                  {entry.data.url ? (
                    <a href={entry.data.url}>
                      {entry.data.type.requires_registration
                        ? "Anmelden"
                        : "Mehr Infos"}
                    </a>
                  ) : null}
                </div>
              </div>
            );
          }
        })
    }
  </div>
</div>

<style>
  .table {
    border-radius: var(--table-border-radius);
  }

  .table > .tbody > .tr-parent:first-child .tr.primary,
  .table > .tbody > .tr.primary:first-child {
    border-top-left-radius: var(--table-border-radius);
    border-top-right-radius: var(--table-border-radius);
  }

  .table > .tbody > .tr-parent:last-child .tr.primary,
  .table > .tbody > .tr.primary:last-child {
    border-bottom-left-radius: var(--table-border-radius);
    border-bottom-right-radius: var(--table-border-radius);
  }
</style>

<style>
  details + .expander {
    display: none;
  }

  details[open] + .expander {
    display: grid;
  }

  /* -- */

  .table a,
  .table a:active,
  .table a:visited,
  .table a:target {
    color: inherit;
    font-weight: 700;
    text-decoration: underline;
    text-decoration-color: var(--table-color);
    text-decoration-thickness: 1px;
    text-underline-offset: 2px;
  }

  .table a:hover,
  .table a:focus {
    text-decoration: underline;
    text-decoration-thickness: auto;
    text-underline-offset: auto;
  }

  .table {
    font-size: 1.5rem;
    line-height: 1.25;
    margin-bottom: 3rem;
    margin-top: -3px;
  }

  .tr {
    margin-top: 3px;
    background-color: var(--table-background);
    color: var(--table-color);
    border: var(--table-border);
    padding-top: calc((4rem - 1.25 * 1em) / 2);
    padding-bottom: calc((4rem - 1.25 * 1em) / 2);
  }

  .tr:hover {
    background-color: var(--table-background-hover);
    color: var(--table-color-hover);
    border: var(--table-border-hover);
  }

  .tr {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  /* -- */

  .additional-dates {
    background-color: var(--pill-background);
    color: var(--pill-color);
    border-radius: 1.5rem;
    padding-left: 0.75rem;
    padding-right: 1rem;
    font-weight: 400;
    font-size: 1rem;
    line-height: calc(28 * 1rem / 16);
    padding-top: calc(5 * 1rem / 16);
    padding-bottom: calc(4 * 1rem / 16);
    position: relative;
    bottom: calc(1 * 1rem / 16);
    text-wrap: nowrap;
    word-break: break-all;
  }

  .tr:hover .additional-dates {
    background-color: var(--pill-background-hover);
    color: var(--pill-color-hover);
  }

  /* -- */

  .tr.primary {
    cursor: pointer;
  }

  /* -- */

  .description {
    font-size: 1.25rem;
    line-height: 1.5;
    font-weight: 400;
  }

  .name .title {
    font-weight: 500;
    color: var(--table-color-highlight);
  }

  .name,
  .date,
  .dates,
  .time,
  .times,
  .location,
  .link,
  .description,
  *[data-column-name] {
    --indent: 0.5rem;
    margin-left: var(--indent);
  }

  *[data-column-name]::before {
    content: attr(data-column-name);
  }

  .name::before {
    content: "Kurs";
  }
  .date::before,
  .dates::before {
    content: "Datum";
    content: "Datum";
  }
  .time::before,
  .times::before {
    content: "Uhrzeit";
  }
  .location::before {
    content: "Ort";
  }
  .link::before {
    content: "";
  }
  .description::before {
    content: "Beschreibung";
  }

  .name::before {
    content: "Was?";
  }
  .date::before,
  .dates::before {
    content: "Wann?";
  }
  .time::before,
  .times::before {
    content: "";
  }
  .location::before {
    content: "Wer?";
  }

  *[data-column-name]::before,
  .name::before,
  .date::before,
  .dates::before,
  .time::before,
  .times::before,
  .location::before,
  .link::before,
  .description::before {
    display: block;
    font-weight: 800;
    font-size: 14px;
    line-height: 1rem;
    margin-left: calc(-1 * var(--indent));
  }

  .if-small-viewport {
    display: none;
    font-size: 1.25rem;
    position: relative;
    top: 0.15em;
  }

  .if-large-viewport {
    display: none;
  }

  @media (min-width: 1120px) {
    .if-small-viewport {
      display: none;
    }

    .if-large-viewport {
      display: inline;
    }
  }

  @media (min-width: 900px) {
    .table {
      display: grid;
      grid-template-columns:
        [start name name-start] 15fr
        [datetime datetime-start name-end] 11fr
        [location location-start datetime-end] 16fr
        [link link-start location-end] 8fr
        [end link-end];
    }

    .name {
      grid-column: name;
    }
    .dates {
      grid-column: datetime;
    }
    .date {
      grid-column: datetime;
    }
    .time,
    .times {
      grid-column: datetime;
    }
    .location {
      grid-column: location;
    }
    .link {
      grid-column: link;
    }
    .description {
      grid-column: start / end;
    }

    .tbody,
    .thead,
    .tr-parent,
    .tr,
    .expander,
    .extended,
    .sub-table,
    details,
    summary {
      grid-column: start / end;
      display: grid;
      grid-template-columns: subgrid;
    }

    .td::before {
      content: none !important;
    }

    .name,
    .date,
    .dates,
    .time,
    .times,
    .location,
    .link {
      --indent: 0px;
    }
  }

  /** -- */

  .sub-table {
    font-weight: 300;
    /* font-size: 1.25rem; */
  }
</style>

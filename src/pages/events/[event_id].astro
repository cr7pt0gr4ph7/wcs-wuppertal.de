---
import { getCollection, render } from "astro:content";
import MinimalLayout from "../../layouts/MinimalLayout.astro";
import "../../styles/section.css";
import demoImage from "../../assets/parties-und-events.jpg";
import { Picture } from "astro:assets";
import { Schema } from "astro-seo-schema";
import type { WithContext, Event } from "schema-dts";

export async function getStaticPaths() {
  const events = await getCollection("events");
  const result = events.map((event) => ({
    params: { event_id: event.id },
    props: { event },
  }));
  return result;
}
const { event } = Astro.props;
const { Content } = await render(event);

const linkTypes = [
  { name: "Webseite", key: "homepage" },
  { name: "Google Maps", key: "maps" },
  { name: "Facebook", key: "facebook" },
  { name: "Instagram", key: "instagram" },
] as const;

const links = event.data.links
  ? linkTypes.flatMap((linkType) => {
      if (!event.data.links) {
        return [];
      }
      if (!event.data.links[linkType.key]) {
        return [];
      }
      return [
        {
          name: linkType.name,
          key: linkType.key,
          url: event.data.links[linkType.key],
        },
      ];
    })
  : [];

const { title, subtitle, description } = event.data;
---

<MinimalLayout title={title} subtitle={subtitle} isHomepageOrAbout={false}>
  <Schema
    slot="seo-json-ld"
    item={{
      url: "/events/" + event.id + "/",
      "@context": "https://schema.org",
      "@type": "Event",
      name: subtitle ? title + ": " + subtitle : title,
      description: description,
      image: demoImage.src,
      startDate: event.data.date.toString(),
      endDate: event.data.endDate?.toString(),
      eventStatus: "https://schema.org/EventScheduled",
      eventAttendanceMode: "OfflineEventAttendanceMode",
      location: {
        "@type": "Place",
        name: event.data.location,
        address: event.data.address
          ? {
              "@type": "PostalAddress",
              name: event.data.address.name,
              streetAddress: event.data.address.street,
              addressLocality: event.data.address.city,
              postalCode: event.data.address.postalCode,
              addressCountry: event.data.address.countryCode,
              url: event.data.address.url,
            }
          : undefined,
      },
      organizer: {
        "@type": "Organization",
        name: "WCS Wuppertal",
        url: "https://wcs-wuppertal.de",
      },
    } satisfies WithContext<Event>}
  />

  <article>
    {title && <h2>{title}</h2>}
    {subtitle && <h3>{subtitle}</h3>}
    <div class="image-container">
      <Picture src={demoImage} alt="Party" />
    </div>
    <Content />
    {
      links && links.length > 0 ? (
        <aside>
          <h4>Links</h4>
          <ul>
            {links.map((link) => {
              return (
                <li>
                  <a href={link.url}>{link.name}</a>
                </li>
              );
            })}
          </ul>
        </aside>
      ) : null
    }
  </article>
</MinimalLayout>

<style>
  article::after {
    content: "";
    clear: both;
    display: block;
  }

  h4 {
    margin-top: 2.5rem;
    font-size: 1.25rem;
  }

  ul {
    list-style: none;
    padding-left: 0;
  }

  article li {
    font-size: 1.25rem;
    margin-bottom: 0.5rem;
  }

  ul li a {
    color: #eee;
    font-weight: 400;
    text-underline-offset: 2px;
    text-decoration-thickness: 2px;
    text-decoration-color: #999;
  }

  ul li a:hover {
    color: #fff;
    text-decoration-color: #fff;
  }

  h2 {
    font-size: 6rem;
    margin-top: 1rem;
    line-height: 1.25;
    color: #eee;
  }

  @media (max-width: 900px) {
    h2 {
      font-size: 4rem;
    }
  }

  @media (max-width: 300px) {
    h2 {
      font-size: 3rem;
    }
  }

  h3 {
    font-size: 3rem;
    font-weight: 100;
  }

  h2 + h3 {
    margin-top: -2rem;
    margin-bottom: 2.8rem;
  }

  .image-container {
    max-width: min(100%, 500px);
    margin-left: auto;
    margin-right: auto;
  }

  @media (min-width: 900px) {
    .image-container {
      float: right;
      max-width: 50%;
      max-height: none;
      padding-left: 1rem;
      padding-bottom: 2rem;
      margin-top: 0.5rem;
      margin-left: 0;
      margin-right: 0;
    }
  }

  article {
    margin-bottom: 3rem;
  }

  @media (min-width: 900px) {
    article {
      margin-bottom: 15rem;
    }
  }
</style>
